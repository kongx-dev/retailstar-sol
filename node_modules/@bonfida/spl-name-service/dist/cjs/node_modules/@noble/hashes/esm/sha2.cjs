"use strict";var t=require("./_md.cjs"),e=require("./_u64.cjs"),h=require("./utils.cjs");const s=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),c=new Uint32Array(64);class a extends t.HashMD{constructor(e=32){super(64,e,8,!1),this.A=0|t.SHA256_IV[0],this.B=0|t.SHA256_IV[1],this.C=0|t.SHA256_IV[2],this.D=0|t.SHA256_IV[3],this.E=0|t.SHA256_IV[4],this.F=0|t.SHA256_IV[5],this.G=0|t.SHA256_IV[6],this.H=0|t.SHA256_IV[7]}get(){const{A:t,B:e,C:h,D:s,E:c,F:a,G:r,H:d}=this;return[t,e,h,s,c,a,r,d]}set(t,e,h,s,c,a,r,d){this.A=0|t,this.B=0|e,this.C=0|h,this.D=0|s,this.E=0|c,this.F=0|a,this.G=0|r,this.H=0|d}process(e,a){for(let t=0;t<16;t++,a+=4)c[t]=e.getUint32(a,!1);for(let t=16;t<64;t++){const e=c[t-15],s=c[t-2],a=h.rotr(e,7)^h.rotr(e,18)^e>>>3,r=h.rotr(s,17)^h.rotr(s,19)^s>>>10;c[t]=r+c[t-7]+a+c[t-16]|0}let{A:r,B:d,C:b,D:i,E:x,F:f,G:l,H:o}=this;for(let e=0;e<64;e++){const a=o+(h.rotr(x,6)^h.rotr(x,11)^h.rotr(x,25))+t.Chi(x,f,l)+s[e]+c[e]|0,H=(h.rotr(r,2)^h.rotr(r,13)^h.rotr(r,22))+t.Maj(r,d,b)|0;o=l,l=f,f=x,x=i+a|0,i=b,b=d,d=r,r=a+H|0}r=r+this.A|0,d=d+this.B|0,b=b+this.C|0,i=i+this.D|0,x=x+this.E|0,f=f+this.F|0,l=l+this.G|0,o=o+this.H|0,this.set(r,d,b,i,x,f,l,o)}roundClean(){h.clean(c)}destroy(){this.set(0,0,0,0,0,0,0,0),h.clean(this.buffer)}}const r=(()=>e.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((t=>BigInt(t)))))(),d=(()=>r[0])(),b=(()=>r[1])(),i=new Uint32Array(80),x=new Uint32Array(80);class f extends t.HashMD{constructor(e=64){super(128,e,16,!1),this.Ah=0|t.SHA512_IV[0],this.Al=0|t.SHA512_IV[1],this.Bh=0|t.SHA512_IV[2],this.Bl=0|t.SHA512_IV[3],this.Ch=0|t.SHA512_IV[4],this.Cl=0|t.SHA512_IV[5],this.Dh=0|t.SHA512_IV[6],this.Dl=0|t.SHA512_IV[7],this.Eh=0|t.SHA512_IV[8],this.El=0|t.SHA512_IV[9],this.Fh=0|t.SHA512_IV[10],this.Fl=0|t.SHA512_IV[11],this.Gh=0|t.SHA512_IV[12],this.Gl=0|t.SHA512_IV[13],this.Hh=0|t.SHA512_IV[14],this.Hl=0|t.SHA512_IV[15]}get(){const{Ah:t,Al:e,Bh:h,Bl:s,Ch:c,Cl:a,Dh:r,Dl:d,Eh:b,El:i,Fh:x,Fl:f,Gh:l,Gl:o,Hh:H,Hl:A}=this;return[t,e,h,s,c,a,r,d,b,i,x,f,l,o,H,A]}set(t,e,h,s,c,a,r,d,b,i,x,f,l,o,H,A){this.Ah=0|t,this.Al=0|e,this.Bh=0|h,this.Bl=0|s,this.Ch=0|c,this.Cl=0|a,this.Dh=0|r,this.Dl=0|d,this.Eh=0|b,this.El=0|i,this.Fh=0|x,this.Fl=0|f,this.Gh=0|l,this.Gl=0|o,this.Hh=0|H,this.Hl=0|A}process(t,h){for(let e=0;e<16;e++,h+=4)i[e]=t.getUint32(h),x[e]=t.getUint32(h+=4);for(let t=16;t<80;t++){const h=0|i[t-15],s=0|x[t-15],c=e.rotrSH(h,s,1)^e.rotrSH(h,s,8)^e.shrSH(h,s,7),a=e.rotrSL(h,s,1)^e.rotrSL(h,s,8)^e.shrSL(h,s,7),r=0|i[t-2],d=0|x[t-2],b=e.rotrSH(r,d,19)^e.rotrBH(r,d,61)^e.shrSH(r,d,6),f=e.rotrSL(r,d,19)^e.rotrBL(r,d,61)^e.shrSL(r,d,6),l=e.add4L(a,f,x[t-7],x[t-16]),o=e.add4H(l,c,b,i[t-7],i[t-16]);i[t]=0|o,x[t]=0|l}let{Ah:s,Al:c,Bh:a,Bl:r,Ch:f,Cl:l,Dh:o,Dl:H,Eh:A,El:S,Fh:n,Fl:_,Gh:I,Gl:B,Hh:V,Hl:C}=this;for(let t=0;t<80;t++){const h=e.rotrSH(A,S,14)^e.rotrSH(A,S,18)^e.rotrBH(A,S,41),D=e.rotrSL(A,S,14)^e.rotrSL(A,S,18)^e.rotrBL(A,S,41),u=A&n^~A&I,E=S&_^~S&B,F=e.add5L(C,D,E,b[t],x[t]),G=e.add5H(F,V,h,u,d[t],i[t]),L=0|F,p=e.rotrSH(s,c,28)^e.rotrBH(s,c,34)^e.rotrBH(s,c,39),U=e.rotrSL(s,c,28)^e.rotrBL(s,c,34)^e.rotrBL(s,c,39),g=s&a^s&f^a&f,y=c&r^c&l^r&l;V=0|I,C=0|B,I=0|n,B=0|_,n=0|A,_=0|S,({h:A,l:S}=e.add(0|o,0|H,0|G,0|L)),o=0|f,H=0|l,f=0|a,l=0|r,a=0|s,r=0|c;const w=e.add3L(L,U,y);s=e.add3H(w,G,p,g),c=0|w}({h:s,l:c}=e.add(0|this.Ah,0|this.Al,0|s,0|c)),({h:a,l:r}=e.add(0|this.Bh,0|this.Bl,0|a,0|r)),({h:f,l:l}=e.add(0|this.Ch,0|this.Cl,0|f,0|l)),({h:o,l:H}=e.add(0|this.Dh,0|this.Dl,0|o,0|H)),({h:A,l:S}=e.add(0|this.Eh,0|this.El,0|A,0|S)),({h:n,l:_}=e.add(0|this.Fh,0|this.Fl,0|n,0|_)),({h:I,l:B}=e.add(0|this.Gh,0|this.Gl,0|I,0|B)),({h:V,l:C}=e.add(0|this.Hh,0|this.Hl,0|V,0|C)),this.set(s,c,a,r,f,l,o,H,A,S,n,_,I,B,V,C)}roundClean(){h.clean(i,x)}destroy(){h.clean(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const l=h.createHasher((()=>new a)),o=h.createHasher((()=>new f));exports.SHA256=a,exports.SHA512=f,exports.sha256=l,exports.sha512=o;
//# sourceMappingURL=sha2.cjs.map
