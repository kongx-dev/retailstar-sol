"use strict";var e=require("./crypto.cjs");
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function t(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name}function r(e,...r){if(!t(e))throw new Error("Uint8Array expected");if(r.length>0&&!r.includes(e.length))throw new Error("Uint8Array expected of length "+r+", got length="+e.length)}function n(e){if("string"!=typeof e)throw new Error("string expected");return new Uint8Array((new TextEncoder).encode(e))}function o(e){return"string"==typeof e&&(e=n(e)),r(e),e}exports.Hash=class{},exports.abytes=r,exports.aexists=function(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")},exports.anumber=function(e){if(!Number.isSafeInteger(e)||e<0)throw new Error("positive integer expected, got "+e)},exports.aoutput=function(e,t){r(e);const n=t.outputLen;if(e.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)},exports.clean=function(...e){for(let t=0;t<e.length;t++)e[t].fill(0)},exports.createHasher=function(e){const t=t=>e().update(o(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t},exports.createView=function(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)},exports.isBytes=t,exports.randomBytes=function(t=32){if(e.crypto&&"function"==typeof e.crypto.getRandomValues)return e.crypto.getRandomValues(new Uint8Array(t));if(e.crypto&&"function"==typeof e.crypto.randomBytes)return Uint8Array.from(e.crypto.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")},exports.rotr=function(e,t){return e<<32-t|e>>>t},exports.toBytes=o,exports.utf8ToBytes=n;
//# sourceMappingURL=utils.cjs.map
