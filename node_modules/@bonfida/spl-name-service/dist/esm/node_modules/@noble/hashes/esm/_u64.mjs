const n=BigInt(2**32-1),t=BigInt(32);function r(r,e=!1){return e?{h:Number(r&n),l:Number(r>>t&n)}:{h:0|Number(r>>t&n),l:0|Number(r&n)}}function e(n,t=!1){const e=n.length;let o=new Uint32Array(e),u=new Uint32Array(e);for(let c=0;c<e;c++){const{h:e,l:i}=r(n[c],t);[o[c],u[c]]=[e,i]}return[o,u]}const o=(n,t,r)=>n>>>r,u=(n,t,r)=>n<<32-r|t>>>r,c=(n,t,r)=>n>>>r|t<<32-r,i=(n,t,r)=>n<<32-r|t>>>r,l=(n,t,r)=>n<<64-r|t>>>r-32,s=(n,t,r)=>n>>>r-32|t<<64-r;function h(n,t,r,e){const o=(t>>>0)+(e>>>0);return{h:n+r+(o/2**32|0)|0,l:0|o}}const b=(n,t,r)=>(n>>>0)+(t>>>0)+(r>>>0),f=(n,t,r,e)=>t+r+e+(n/2**32|0)|0,m=(n,t,r,e)=>(n>>>0)+(t>>>0)+(r>>>0)+(e>>>0),N=(n,t,r,e,o)=>t+r+e+o+(n/2**32|0)|0,g=(n,t,r,e,o)=>(n>>>0)+(t>>>0)+(r>>>0)+(e>>>0)+(o>>>0),a=(n,t,r,e,o,u)=>t+r+e+o+u+(n/2**32|0)|0;export{h as add,f as add3H,b as add3L,N as add4H,m as add4L,a as add5H,g as add5L,r as fromBig,l as rotrBH,s as rotrBL,c as rotrSH,i as rotrSL,o as shrSH,u as shrSL,e as split};
//# sourceMappingURL=_u64.mjs.map
