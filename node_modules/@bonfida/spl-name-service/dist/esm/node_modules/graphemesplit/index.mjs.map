{"version":3,"file":"index.mjs","sources":["../../../../node_modules/graphemesplit/index.js"],"sourcesContent":["const types = require(\"./types\");\nconst typeTrieData = require(\"./typeTrie.json\").data;\nconst extPictData = require(\"./extPict.json\").data;\nconst inCBData = require(\"./inCB.json\").data;\n\nconst UnicodeTrie = require(\"unicode-trie\");\nconst Base64 = require(\"js-base64\").Base64;\n\nconst typeTrie = new UnicodeTrie(Base64.toUint8Array(typeTrieData));\nconst extPict = new UnicodeTrie(Base64.toUint8Array(extPictData));\nconst inCB = new UnicodeTrie(Base64.toUint8Array(inCBData));\n\nfunction is(type, bit) {\n  return (type & bit) !== 0;\n}\n\nfunction nextGraphemeClusterSize(s, ts, start) {\n  const L = ts.length;\n\n  for (let i = start; i + 1 < L; i++) {\n    const curr = ts[i + 0];\n    const next = ts[i + 1];\n\n    // GB9c: \\p{InCB=Consonant} [ \\p{InCB=Extend} \\p{InCB=Linker} ]* \\p{InCB=Linker} [ \\p{InCB=Extend} \\p{InCB=Linker} ]* × \\p{InCB=Consonant}\n    switch (s.gb9c) {\n    case 0:\n      if (is(curr, types.InCB_Consonant)) s.gb9c = 1;\n      break;\n    case 1:\n      if (is(curr, types.InCB_Extend)) s.gb9c = 1;\n      else if (is(curr, types.InCB_Linker)) s.gb9c = 2;\n      else s.gb9c = is(curr, types.InCB_Consonant) ? 1 : 0;\n      break;\n    case 2:\n      if (is(curr, types.InCB_Extend | types.InCB_Linker)) s.gb9c = 2;\n      else s.gb9c = is(curr, types.InCB_Consonant) ? 1 : 0;\n      break;\n    }\n\n    // GB11: \\p{Extended_Pictographic} Extend* ZWJ x \\p{Extended_Pictographic}\n    switch (s.gb11) {\n    case 0:\n      if (is(curr, types.Extended_Pictographic)) s.gb11 = 1;\n      break;\n    case 1:\n      if (is(curr, types.Extend)) s.gb11 = 1;\n      else if (is(curr, types.ZWJ)) s.gb11 = 2;\n      else s.gb11 = is(curr, types.Extended_Pictographic) ? 1 : 0;\n      break;\n    case 2:\n      s.gb11 = is(curr, types.Extended_Pictographic) ? 1 : 0;\n      break;\n    }\n\n    // GB12: sot (RI RI)* RI × RI\n    switch (s.gb12) {\n    case 0:\n      if (is(curr, types.Regional_Indicator)) s.gb12 = 1;\n      else s.gb12 = -1;\n      break;\n    case 1:\n      if (is(curr, types.Regional_Indicator)) s.gb12 = 0;\n      else s.gb12 = -1;\n      break;\n    }\n\n    // GB13: [^RI] (RI RI)* RI × RI\n    switch (s.gb13) {\n    case 0:\n      if (!is(curr, types.Regional_Indicator)) s.gb13 = 1;\n      break;\n    case 1:\n      if (is(curr, types.Regional_Indicator)) s.gb13 = 2;\n      else s.gb13 = 1;\n      break;\n    case 2:\n      s.gb13 = 1;\n      break;\n    }\n\n    // GB3: CR x LF\n    if (is(curr, types.CR) && is(next, types.LF)) {\n      continue;\n    }\n    // GB4: (Control | CR | LF) ÷\n    if (is(curr, types.Control | types.CR | types.LF)) {\n      return i + 1 - start;\n    }\n    // GB5: ÷ (Control | CR | LF)\n    if (is(next, types.Control | types.CR | types.LF)) {\n      return i + 1 - start;\n    }\n    // GB6: L x (L | V | LV | LVT)\n    if (\n      is(curr, types.L) &&\n      is(next, types.L | types.V | types.LV | types.LVT)\n    ) {\n      continue;\n    }\n    // GB7: (LV | V) x (V | T)\n    if (is(curr, types.LV | types.V) && is(next, types.V | types.T)) {\n      continue;\n    }\n    // GB8: (LVT | T) x T\n    if (is(curr, types.LVT | types.T) && is(next, types.T)) {\n      continue;\n    }\n    // GB9: x (Extend | ZWJ)\n    if (is(next, types.Extend | types.ZWJ)) {\n      continue;\n    }\n    // GB9a: x SpacingMark\n    if (is(next, types.SpacingMark)) {\n      continue;\n    }\n    // GB9b: Prepend x\n    if (is(curr, types.Prepend)) {\n      continue;\n    }\n    // GB9c: \\p{InCB=Consonant} [ \\p{InCB=Extend} \\p{InCB=Linker} ]* \\p{InCB=Linker} [ \\p{InCB=Extend} \\p{InCB=Linker} ]* × \\p{InCB=Consonant}\n    if (is(next, types.InCB_Consonant) && s.gb9c === 2) {\n      continue;\n    }\n    // GB11: \\p{Extended_Pictographic} Extend* ZWJ x \\p{Extended_Pictographic}\n    if (is(next, types.Extended_Pictographic) && s.gb11 === 2) {\n      continue;\n    }\n    // GB12: sot (RI RI)* RI x RI\n    if (is(next, types.Regional_Indicator) && s.gb12 === 1) {\n      continue;\n    }\n    // GB13: [^RI] (RI RI)* RI x RI\n    if (is(next, types.Regional_Indicator) && s.gb13 === 2) {\n      continue;\n    }\n    // GB999: Any ÷ Any\n    return i + 1 - start;\n  }\n  return L - start;\n}\n\nmodule.exports = function split(str) {\n  const graphemeClusters = [];\n\n  const map = [0];\n  const ts = [];\n  for (let i = 0; i < str.length; ) {\n    const code = str.codePointAt(i);\n    ts.push(typeTrie.get(code) | extPict.get(code) | inCB.get(code));\n    i += code > 65535 ? 2 : 1;\n    map.push(i);\n  }\n  const s = {\n    gb9c: 0,\n    gb11: 0,\n    gb12: 0,\n    gb13: 0,\n  };\n  for (let offset = 0; offset < ts.length; ) {\n    const size = nextGraphemeClusterSize(s, ts, offset);\n    const start = map[offset];\n    const end = map[offset + size];\n    graphemeClusters.push(str.slice(start, end));\n    offset += size;\n  }\n\n  return graphemeClusters;\n};\n"],"names":["types","require$$0","typeTrieData","require$$1","data","extPictData","require$$2","inCBData","require$$3","UnicodeTrie","require$$4","Base64","require$$5","typeTrie","toUint8Array","extPict","inCB","is","type","bit","nextGraphemeClusterSize","s","ts","start","L","length","i","curr","next","gb9c","InCB_Consonant","InCB_Extend","InCB_Linker","gb11","Extended_Pictographic","Extend","ZWJ","gb12","Regional_Indicator","gb13","CR","LF","Control","V","LV","LVT","T","SpacingMark","Prepend","str","graphemeClusters","map","code","codePointAt","push","get","offset","size","end","slice"],"mappings":"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","x_google_ignoreList":[0]}